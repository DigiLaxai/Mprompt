import React from 'react';
import { DownloadIcon } from './icons/DownloadIcon';
import { CloseIcon } from './icons/CloseIcon';

interface GeneratedImageModalProps {
  isOpen: boolean;
  onClose: () => void;
  imageData: string | null;
  prompt: string;
}

export const GeneratedImageModal: React.FC<GeneratedImageModalProps> = ({ isOpen, onClose, imageData, prompt }) => {
  if (!isOpen) return null;

  const handleDownload = () => {
    if (!imageData) return;
    const link = document.createElement('a');
    link.href = `data:image/png;base64,${imageData}`;
    // Create a filename from the prompt
    const filename = prompt.toLowerCase().replace(/[^a-z0-9\s]/g, '').replace(/\s+/g, '-').slice(0, 50) || 'generated-image';
    link.download = `${filename}.png`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  return (
    <div className="fixed inset-0 bg-black/80 z-40 flex items-center justify-center p-4" onClick={onClose} role="dialog" aria-modal="true" aria-labelledby="image-modal-title">
      <div 
        className="bg-slate-900 border border-slate-700 rounded-2xl shadow-2xl w-full max-w-2xl max-h-[90vh] flex flex-col relative"
        onClick={(e) => e.stopPropagation()}
      >
        <div className="flex justify-between items-center p-4 border-b border-slate-700">
            <h3 id="image-modal-title" className="text-lg font-semibold text-yellow-400">Generated Image</h3>
            <button onClick={onClose} className="p-2 rounded-full hover:bg-slate-700 transition-colors" aria-label="Close modal">
              <CloseIcon className="w-6 h-6 text-slate-400" />
            </button>
        </div>
        
        <div className="flex-grow p-6 overflow-y-auto">
          {imageData ? (
            <div className="space-y-6">
                <img
                    src={`data:image/png;base64,${imageData}`}
                    alt="Generated by AI"
                    className="w-full h-auto rounded-lg border-2 border-slate-700"
                />
                <div>
                    <p className="text-sm font-semibold text-slate-400 mb-2">PROMPT USED:</p>
                    <p className="bg-slate-800 p-3 rounded-md text-slate-300 text-sm">{prompt}</p>
                </div>
            </div>
          ) : (
             <p className="text-center text-slate-400">Something went wrong. No image data available.</p>
          )}
        </div>
        
        {imageData && (
            <div className="p-4 border-t border-slate-700">
                <button
                    onClick={handleDownload}
                    disabled={!imageData}
                    className="w-full flex items-center justify-center gap-2 bg-yellow-500 text-slate-900 font-bold py-3 px-4 rounded-lg hover:bg-yellow-400 disabled:bg-slate-600 disabled:cursor-not-allowed transition-all"
                >
                    <DownloadIcon className="w-5 h-5" />
                    Download Image
                </button>
            </div>
        )}
      </div>
    </div>
  );
};
