import React, { useEffect } from 'react';
import { CloseIcon } from './icons/CloseIcon';
import { DownloadIcon } from './icons/DownloadIcon';

interface GeneratedImageModalProps {
  isOpen: boolean;
  onClose: () => void;
  imageData: { data: string; mimeType: string; } | null;
  prompt: string;
}

export const GeneratedImageModal: React.FC<GeneratedImageModalProps> = ({ isOpen, onClose, imageData, prompt }) => {
  useEffect(() => {
    const handleKeyDown = (event: KeyboardEvent) => {
      if (event.key === 'Escape') {
        onClose();
      }
    };
    if (isOpen) {
      window.addEventListener('keydown', handleKeyDown);
    }
    return () => {
      window.removeEventListener('keydown', handleKeyDown);
    };
  }, [isOpen, onClose]);

  if (!isOpen || !imageData) return null;

  const handleDownload = () => {
    const link = document.createElement('a');
    link.href = `data:${imageData.mimeType};base64,${imageData.data}`;
    
    // Create a filename from the prompt
    const safePrompt = prompt.replace(/[^a-z0-9]/gi, '_').toLowerCase();
    const filename = `${safePrompt.substring(0, 30)}.png`;
    link.download = filename;

    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  return (
    <div 
      className="fixed inset-0 bg-black/70 z-40 flex items-center justify-center p-4 transition-opacity" 
      onClick={onClose}
      role="dialog" 
      aria-modal="true" 
      aria-labelledby="image-modal-title"
    >
      <div 
        className="bg-slate-900 border border-slate-700 rounded-xl shadow-2xl w-full max-w-2xl max-h-[90vh] flex flex-col overflow-hidden"
        onClick={(e) => e.stopPropagation()}
      >
        <div className="p-4 border-b border-slate-700 flex justify-between items-center flex-shrink-0">
          <h2 id="image-modal-title" className="text-lg font-semibold text-yellow-400">Image Generated</h2>
          <button onClick={onClose} className="p-2 rounded-full hover:bg-slate-700 transition-colors" aria-label="Close modal">
            <CloseIcon className="w-6 h-6 text-slate-400" />
          </button>
        </div>
        <div className="flex-grow p-4 overflow-y-auto">
          <img
            src={`data:${imageData.mimeType};base64,${imageData.data}`}
            alt="Generated by AI"
            className="rounded-lg shadow-lg w-full h-auto mx-auto"
          />
          <p className="text-sm text-slate-400 mt-4 bg-slate-800 p-3 rounded-md">{prompt}</p>
        </div>
        <div className="p-4 border-t border-slate-700 flex justify-end gap-3 flex-shrink-0">
          <button onClick={onClose} className="bg-slate-700 text-slate-200 font-bold py-2 px-4 rounded-lg hover:bg-slate-600 transition-colors">Close</button>
          <button onClick={handleDownload} className="flex items-center gap-2 bg-yellow-500 text-slate-900 font-bold py-2 px-4 rounded-lg hover:bg-yellow-400 transition-colors">
            <DownloadIcon className="w-5 h-5" />
            Download
          </button>
        </div>
      </div>
    </div>
  );
};
